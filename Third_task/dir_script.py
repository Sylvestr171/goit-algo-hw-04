import sys
from pathlib import Path
from re import match
import colorama 

#->->->->->->->->->->***THIRD TASK***<-<-<-<-<-<-<-<-<-<

print ('\n\tTHIRD TASK\n')

# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –¥–µ—Ç–∞–ª—å–Ω–æ—ó –¥–æ–≤—ñ–¥–∫–∏ –ø–æ –∑–∞–ø–∏—Ç—É '-h', '--help', '/?'
def show_detailed_help():
    print("""
–ó—Ä–∞–∑–æ–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
    python dir_script.py <path_to_dir>

üîπ –ê—Ä–≥—É–º–µ–Ω—Ç–∏:
    <path_to_dir>       –®–ª—è—Ö –¥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏.
    -h, --help, /?  –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.

–ü—Ä–∏–∫–ª–∞–¥:
    python script.py .\dir\
    python script.py 'D:\path to lib\dir'
""")
    
# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –∫–æ—Ä–æ—Ç–∫–æ—ó –¥–æ–≤—ñ–¥–∫–∏ –ø—Ä–∏ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
def show_short_help():
    print("""
–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–≤—ñ–¥–∫–∏ –≤–≤–µ–¥—ñ—Ç—å: 
    python script.py -h
    python script.py --help
    python script.py /?
""")

# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ —à–ª—è—Ö –¥–æ —Ç–µ–∫–∏
def path_validation(path_str: str) -> bool:
    path = Path(path_str)
    return path.is_dir()

# —Ñ—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—ñ –ø–µ—Ä–µ–¥–∞—á—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
def validation_arg(list_of_arg: list) -> Path:
    if len(list_of_arg) == 2 and path_validation(list_of_arg[1]): #—è–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ 1 –æ–¥—Ä–∞–∑—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ —ñ —á–∏ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î
        path_to_dir = Path(list_of_arg[1])
        print('–¢–µ–∫–∞ ', colorama.Fore.RED, path_to_dir, '\b\\', colorama.Fore.WHITE, '–æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è')
        return path_to_dir
    elif len(list_of_arg) == 2 and list_of_arg[1] in ('-h', '--help', '/?'): #–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —î –∑–∞–ø–∏—Ç–æ–º –Ω–∞ –¥–æ–≤—ñ–¥–∫—É
        show_detailed_help()
    elif len(list_of_arg) == 2 and not(path_validation(list_of_arg[1])): #—è–∫—â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –Ω–µ —î —à–ª—è—Ö –∞–±–æ —Ç–∞–∫–∞ —Ç–µ–∫–∞ –Ω–µ —ñ—Å–Ω—É—î
        print (colorama.Fore.RED, '–î–∞–Ω–∏–π —à–ª—è—Ö –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —î —à–ª—è—Ö–æ–º', colorama.Fore.WHITE )
        show_short_help()
    else:
        show_short_help()

path_to_dir = validation_arg(sys.argv) #–≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤

#—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –Ω–µ—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏, –∞ —Ç–∞–∫–æ–∂ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ —à–ª—è—Ö—ñ–≤ –¥–æ –ø–∞–ø–æ–∫—ñ —Ñ–∞–π–ª—ñ–≤
def iter_object_in_dir(path: Path) -> list[Path]:
    string_with_space = "|" + len(path_to_dir.parts) * "--"
    print (colorama.Fore.BLUE, string_with_space, path.name, '\b\\')
    for i in path.iterdir():
        if i.is_file(): #–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ–±'—î–∫—Ç —Ñ–∞–π–ª
            string_with_space ="|" + len(i.parts) * "--"
            print(colorama.Fore.GREEN, string_with_space, i.name)
        elif i.is_dir():  #–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ–±'—î–∫—Ç –ø–∞–ø–∫–∞
            iter_object_in_dir(i) #—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–∫–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é 


# list_of_dir = [] #–±—É–¥–µ –º—ñ—Å—Ç–∏—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ –ø–∞–ø–æ–∫
# list_of_file = [] #–±—É–¥–µ –º—ñ—Å—Ç–∏—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ñ–∞–π–ª—ñ–≤
#—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –Ω–µ—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏, –∞ —Ç–∞–∫–æ–∂ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ —à–ª—è—Ö—ñ–≤ –¥–æ –ø–∞–ø–æ–∫—ñ —Ñ–∞–π–ª—ñ–≤
def list_of_dir_and_files(path: Path) -> list[Path]:
    try:
        list_of_dir.append(path) #—Ñ–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö —à–ª—è—Ö—ñ–≤ –¥–æ –ø–∞–ø–æ–∫
    except NameError:
        list_of_dir = [path]
    for i in path.iterdir():
        if i.is_file(): #–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ–±'—î–∫—Ç —Ñ–∞–π–ª
            try:
                list_of_file.append(i) #—Ñ–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö —à–ª—è—Ö—ñ–≤ –¥–æ –ø–∞–ø–æ–∫
            except NameError:
                list_of_file = [i]
        elif i.is_dir():  #–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –æ–±'—î–∫—Ç –ø–∞–ø–∫–∞
            list_of_dir_and_files(i) #—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–∫–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
    return list_of_dir, list_of_file 


def print_sorted_structure(dir:list[Path], file:list[Path]):
    string_with_space = ''
    for i in dir:
        print (colorama.Fore.BLUE, string_with_space, i.name,'\b\\')
        string_with_space += "    "
        for k in file:
            if k.parent == i:
                print(colorama.Fore.GREEN, string_with_space, k.name)

print (colorama.Fore.RED, '\n\n–ù–µ —Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ–∫–∏\n', colorama.Fore.RESET)
iter_object_in_dir(path_to_dir)
print (colorama.Fore.RED, '\n\nC–æ—Ä—Ç–æ–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ–∫–∏\n', colorama.Fore.RESET)
print(list_of_dir_and_files(path_to_dir)[0], list_of_dir_and_files(path_to_dir)[1])
print_sorted_structure(list_of_dir_and_files(path_to_dir)[0], list_of_dir_and_files(path_to_dir)[1])
print(colorama.Fore.RESET)